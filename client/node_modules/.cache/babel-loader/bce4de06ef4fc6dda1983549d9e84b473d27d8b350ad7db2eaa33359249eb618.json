{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { axiosPrivate } from \"../axios/axios\";\nconst initialState = {\n  posts: [],\n  status: 'idle',\n  //'idle' | 'loading' | 'succeeded' | 'failed'\n  error: null\n};\nexport const addNewPost = createAsyncThunk('posts/addNewPost', async _ref => {\n  let {\n    id,\n    caption,\n    imgData\n  } = _ref;\n  try {\n    const response = await axiosPrivate.post('/posts', {\n      id,\n      caption,\n      imgData\n    });\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nexport const fetchAllPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  try {\n    const response = await axiosPrivate.get('/posts');\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nexport const fetchHomePosts = createAsyncThunk('posts/fetchHomePosts', async _ref2 => {\n  let {\n    userId\n  } = _ref2;\n  try {\n    const response = await axiosPrivate.get(`/posts/home/${userId}`);\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nexport const fetchExplorePosts = createAsyncThunk('posts/fetchExplorePosts', async _ref3 => {\n  let {\n    userId\n  } = _ref3;\n  try {\n    const response = await axiosPrivate.get(`/posts/explore/${userId}`);\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nexport const fetchProfilePosts = createAsyncThunk('posts/fetchProfilePosts', async _ref4 => {\n  let {\n    userId\n  } = _ref4;\n  try {\n    const response = await axiosPrivate.get(`/posts/${userId}`);\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nexport const likePost = createAsyncThunk('posts/likePost', async _ref5 => {\n  let {\n    id,\n    userId\n  } = _ref5;\n  try {\n    const response = await axiosPrivate.patch(`/posts/${id}/like`, {\n      userId\n    });\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(addNewPost.fulfilled, (state, action) => {\n      state.posts.push(action.payload);\n    }).addCase(addNewPost.rejected, (state, action) => {\n      state.error = action.err.message;\n    }).addCase(fetchHomePosts.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchHomePosts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.posts = action.payload;\n    }).addCase(fetchHomePosts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.err.message;\n    }).addCase(fetchExplorePosts.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchExplorePosts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.posts = action.payload;\n    }).addCase(fetchExplorePosts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.err.message;\n    }).addCase(fetchProfilePosts.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchProfilePosts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.posts = action.payload;\n    }).addCase(fetchProfilePosts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.err.message;\n    }).addCase(likePost.fulfilled, (state, action) => {\n      var _action$payload;\n      if (!((_action$payload = action.payload) !== null && _action$payload !== void 0 && _action$payload.id)) {\n        console.log('Update could not complete');\n        console.log(action.payload);\n        return;\n      }\n      const {\n        id\n      } = action.payload;\n      const posts = state.posts.filter(post => post.id !== id);\n      state.posts = [...posts, action.payload];\n    });\n  }\n});\nexport const getPosts = state => state.posts.posts;\nexport const getPostsStatus = state => state.posts.status;\nexport const getPostsError = state => state.posts.error;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosPrivate","initialState","posts","status","error","addNewPost","id","caption","imgData","response","post","data","err","message","fetchAllPosts","get","fetchHomePosts","userId","fetchExplorePosts","fetchProfilePosts","likePost","patch","postsSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","push","payload","rejected","pending","console","log","filter","getPosts","getPostsStatus","getPostsError","reducer"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/redux/postsSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport {axiosPrivate} from \"../axios/axios\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    status: 'idle', //'idle' | 'loading' | 'succeeded' | 'failed'\r\n    error: null\r\n}\r\n\r\nexport const addNewPost = createAsyncThunk('posts/addNewPost', async ({id, caption, imgData}) => {\r\n    try {\r\n        const response = await axiosPrivate.post('/posts', {id, caption, imgData})\r\n        return response.data\r\n    } catch (err) {\r\n        return err.message\r\n    }\r\n})\r\n\r\nexport const fetchAllPosts = createAsyncThunk('posts/fetchPosts', async () => {\r\n    try {\r\n        const response = await axiosPrivate.get('/posts')\r\n        return response.data\r\n    } catch (err) {\r\n        return err.message\r\n    }\r\n})\r\n\r\nexport const fetchHomePosts = createAsyncThunk('posts/fetchHomePosts', async ({userId}) => {\r\n    try {\r\n        const response = await axiosPrivate.get(`/posts/home/${userId}`)\r\n        return response.data\r\n    } catch (err) {\r\n        return err.message\r\n    }\r\n})\r\n\r\nexport const fetchExplorePosts = createAsyncThunk('posts/fetchExplorePosts', async ({userId}) => {\r\n    try {\r\n        const response = await axiosPrivate.get(`/posts/explore/${userId}`)\r\n        return response.data\r\n    } catch (err) {\r\n        return err.message\r\n    }\r\n})\r\n\r\nexport const fetchProfilePosts = createAsyncThunk('posts/fetchProfilePosts', async ({userId}) => {\r\n    try {\r\n        const response = await axiosPrivate.get(`/posts/${userId}`)\r\n        return response.data\r\n    } catch (err) {\r\n        return err.message\r\n    }\r\n})\r\n\r\nexport const likePost = createAsyncThunk('posts/likePost', async ({id, userId}) => {\r\n    try {\r\n        const response = await axiosPrivate.patch(`/posts/${id}/like`, {userId})\r\n        return response.data\r\n    } catch (err) {\r\n        return err.message\r\n    }\r\n})\r\n\r\nconst postsSlice = createSlice({\r\n    name: 'posts',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers(builder){\r\n        builder\r\n\r\n            .addCase(addNewPost.fulfilled, (state, action) => {\r\n                state.posts.push(action.payload)\r\n            })\r\n            .addCase(addNewPost.rejected, (state, action) => {\r\n                state.error = action.err.message\r\n            })\r\n\r\n            .addCase(fetchHomePosts.pending, (state, action) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(fetchHomePosts.fulfilled, (state, action) => {\r\n                state.status = 'succeeded'\r\n                state.posts = action.payload\r\n            })\r\n            .addCase(fetchHomePosts.rejected, (state, action) => {\r\n                state.status = 'failed'\r\n                state.error = action.err.message\r\n            })\r\n\r\n            .addCase(fetchExplorePosts.pending, (state, action) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(fetchExplorePosts.fulfilled, (state, action) => {\r\n                state.status = 'succeeded'\r\n                state.posts = action.payload\r\n            })\r\n            .addCase(fetchExplorePosts.rejected, (state, action) => {\r\n                state.status = 'failed'\r\n                state.error = action.err.message\r\n            })\r\n\r\n            .addCase(fetchProfilePosts.pending, (state, action) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(fetchProfilePosts.fulfilled, (state, action) => {\r\n                state.status = 'succeeded'\r\n                state.posts = action.payload\r\n            })\r\n            .addCase(fetchProfilePosts.rejected, (state, action) => {\r\n                state.status = 'failed'\r\n                state.error = action.err.message\r\n            })\r\n\r\n            .addCase(likePost.fulfilled, (state, action) => {\r\n                if (!action.payload?.id) {\r\n                    console.log('Update could not complete')\r\n                    console.log(action.payload)\r\n                    return;\r\n                }\r\n                const { id } = action.payload;\r\n                const posts = state.posts.filter(post => post.id !== id);\r\n                state.posts = [...posts, action.payload];\r\n            })\r\n\r\n    }\r\n})\r\n\r\nexport const getPosts = (state) => state.posts.posts\r\nexport const getPostsStatus = (state) => state.posts.status;\r\nexport const getPostsError = (state) => state.posts.error;\r\nexport default postsSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
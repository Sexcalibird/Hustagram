{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { axiosPrivate } from \"../axios/axios\";\nconst initialState = {\n  posts: [],\n  status: 'idle',\n  //'idle' | 'loading' | 'succeeded' | 'failed'\n  error: null\n};\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  try {\n    const response = await axiosPrivate.get('/posts');\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nexport const addNewPost = createAsyncThunk('posts/addNewPost', async _ref => {\n  let {\n    caption,\n    imgData\n  } = _ref;\n  try {\n    const response = await axiosPrivate.post('/posts', {\n      caption,\n      imgData\n    });\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(addNewPost.fulfilled, (state, action) => {\n      state.posts.push(action.payload);\n    });\n  }\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosPrivate","initialState","posts","status","error","fetchPosts","response","get","data","err","message","addNewPost","caption","imgData","post","postsSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","push","payload","reducer"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/redux/postsSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport {axiosPrivate} from \"../axios/axios\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    status: 'idle', //'idle' | 'loading' | 'succeeded' | 'failed'\r\n    error: null\r\n}\r\n\r\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\r\n    try {\r\n        const response = await axiosPrivate.get('/posts')\r\n        return response.data\r\n    } catch (err) {\r\n        return err.message\r\n    }\r\n})\r\n\r\nexport const addNewPost = createAsyncThunk('posts/addNewPost', async ({caption, imgData}) => {\r\n    try {\r\n        const response = await axiosPrivate.post('/posts', {caption, imgData})\r\n        return response.data\r\n    } catch (err) {\r\n        return err.message\r\n    }\r\n})\r\n\r\nconst postsSlice = createSlice({\r\n    name: 'posts',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers(builder){\r\n        builder\r\n            .addCase(addNewPost.fulfilled, (state, action) => {\r\n                state.posts.push(action.payload)\r\n            })\r\n    }\r\n})\r\n\r\n\r\nexport default postsSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9D,SAAQC,YAAY,QAAO,gBAAgB;AAE3C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,MAAM;EAAE;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACvE,IAAI;IACA,MAAMO,QAAQ,GAAG,MAAMN,YAAY,CAACO,GAAG,CAAC,QAAQ,CAAC;IACjD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAOA,GAAG,CAACC,OAAO;EACtB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGZ,gBAAgB,CAAC,kBAAkB,EAAE,cAA8B;EAAA,IAAvB;IAACa,OAAO;IAAEC;EAAO,CAAC;EACpF,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMN,YAAY,CAACc,IAAI,CAAC,QAAQ,EAAE;MAACF,OAAO;MAAEC;IAAO,CAAC,CAAC;IACtE,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAOA,GAAG,CAACC,OAAO;EACtB;AACJ,CAAC,CAAC;AAEF,MAAMK,UAAU,GAAGjB,WAAW,CAAC;EAC3BkB,IAAI,EAAE,OAAO;EACbf,YAAY;EACZgB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,CAACC,OAAO,EAAC;IAClBA,OAAO,CACFC,OAAO,CAACT,UAAU,CAACU,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACpB,KAAK,CAACsB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACpC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAGF,eAAeV,UAAU,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
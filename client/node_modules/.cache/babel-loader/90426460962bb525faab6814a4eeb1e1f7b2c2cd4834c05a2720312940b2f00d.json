{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\IdeaProjects\\\\datn\\\\client\\\\src\\\\components\\\\functions\\\\Like.js\",\n  _s = $RefreshSig$();\nimport { likePost } from \"../../redux/postsSlice\";\nimport { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport { useDispatch } from \"react-redux\";\nimport { newNotification } from \"../../redux/notificationSlice\";\nimport { useContext } from \"react\";\nimport CreateContext from \"../../context/ContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Like = _ref => {\n  _s();\n  var _post$likes;\n  let {\n    post,\n    auth,\n    likes,\n    setLikes\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    socket\n  } = useContext(CreateContext);\n  const hasLikedPost = post === null || post === void 0 ? void 0 : (_post$likes = post.likes) === null || _post$likes === void 0 ? void 0 : _post$likes.find(like => like === auth._id);\n  const handleLike = () => {\n    dispatch(likePost({\n      id: post._id,\n      userId: auth._id\n    })).unwrap().then().catch(err => {\n      return err.message;\n    });\n    if (hasLikedPost) {\n      setLikes(post.likes.filter(id => id !== auth._id));\n    } else {\n      setLikes([...post.likes, auth._id]);\n      if (post.userId !== auth._id) {\n        dispatch(newNotification({\n          id: post.userId,\n          postId: post._id,\n          userId: auth._id,\n          text: \"liked your post\"\n        }));\n        socket.emit(\"sendNotification\", {\n          receiverId: post.userId,\n          postId: post._id,\n          userId: auth._id,\n          avatar: auth.avatar,\n          username: auth.username,\n          text: \"liked your post\",\n          date: new Date()\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleLike,\n    children: likes !== null && likes !== void 0 && likes.find(like => like === auth._id) ? /*#__PURE__*/_jsxDEV(Favorite, {\n      fontSize: \"large\",\n      sx: {\n        color: \"#f73378\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorder, {\n      fontSize: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Like, \"HWvpt4vlDljoixZn1/Oz5ZBP6yw=\", false, function () {\n  return [useDispatch];\n});\n_c = Like;\nexport default Like;\nvar _c;\n$RefreshReg$(_c, \"Like\");","map":{"version":3,"names":["likePost","Favorite","FavoriteBorder","useDispatch","newNotification","useContext","CreateContext","Like","post","auth","likes","setLikes","dispatch","socket","hasLikedPost","find","like","_id","handleLike","id","userId","unwrap","then","catch","err","message","filter","postId","text","emit","receiverId","avatar","username","date","Date","color"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/components/functions/Like.js"],"sourcesContent":["import {likePost} from \"../../redux/postsSlice\";\r\nimport {Favorite, FavoriteBorder} from \"@mui/icons-material\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {newNotification} from \"../../redux/notificationSlice\";\r\nimport {useContext} from \"react\";\r\nimport CreateContext from \"../../context/ContextProvider\";\r\n\r\nconst Like = ({post, auth, likes, setLikes}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {socket} = useContext(CreateContext)\r\n\r\n    const hasLikedPost = post?.likes?.find((like) => like === auth._id)\r\n\r\n    const handleLike = () => {\r\n        dispatch(likePost({id: post._id, userId: auth._id}))\r\n            .unwrap()\r\n            .then()\r\n            .catch(err => {\r\n                return err.message\r\n            })\r\n        if (hasLikedPost) {\r\n            setLikes(post.likes.filter((id) => id !== auth._id));\r\n        } else {\r\n            setLikes([...post.likes, auth._id]);\r\n            if (post.userId !== auth._id) {\r\n                dispatch(newNotification({\r\n                    id: post.userId,\r\n                    postId: post._id,\r\n                    userId: auth._id,\r\n                    text: \"liked your post\"\r\n                }))\r\n                socket.emit(\"sendNotification\", {\r\n                    receiverId: post.userId,\r\n                    postId: post._id,\r\n                    userId: auth._id,\r\n                    avatar: auth.avatar,\r\n                    username: auth.username,\r\n                    text: \"liked your post\",\r\n                    date: new Date(),\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button onClick={handleLike}>\r\n            {likes?.find((like) => like === auth._id)\r\n                ? <Favorite fontSize=\"large\" sx={{ color: \"#f73378\" }}/>\r\n                : <FavoriteBorder fontSize=\"large\"/>\r\n            }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Like"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,wBAAwB;AAC/C,SAAQC,QAAQ,EAAEC,cAAc,QAAO,qBAAqB;AAC5D,SAAQC,WAAW,QAAO,aAAa;AACvC,SAAQC,eAAe,QAAO,+BAA+B;AAC7D,SAAQC,UAAU,QAAO,OAAO;AAChC,OAAOC,aAAa,MAAM,+BAA+B;AAAC;AAE1D,MAAMC,IAAI,GAAG,QAAmC;EAAA;EAAA;EAAA,IAAlC;IAACC,IAAI;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC;EAEvC,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAM;IAACU;EAAM,CAAC,GAAGR,UAAU,CAACC,aAAa,CAAC;EAE1C,MAAMQ,YAAY,GAAGN,IAAI,aAAJA,IAAI,sCAAJA,IAAI,CAAEE,KAAK,gDAAX,YAAaK,IAAI,CAAEC,IAAI,IAAKA,IAAI,KAAKP,IAAI,CAACQ,GAAG,CAAC;EAEnE,MAAMC,UAAU,GAAG,MAAM;IACrBN,QAAQ,CAACZ,QAAQ,CAAC;MAACmB,EAAE,EAAEX,IAAI,CAACS,GAAG;MAAEG,MAAM,EAAEX,IAAI,CAACQ;IAAG,CAAC,CAAC,CAAC,CAC/CI,MAAM,EAAE,CACRC,IAAI,EAAE,CACNC,KAAK,CAACC,GAAG,IAAI;MACV,OAAOA,GAAG,CAACC,OAAO;IACtB,CAAC,CAAC;IACN,IAAIX,YAAY,EAAE;MACdH,QAAQ,CAACH,IAAI,CAACE,KAAK,CAACgB,MAAM,CAAEP,EAAE,IAAKA,EAAE,KAAKV,IAAI,CAACQ,GAAG,CAAC,CAAC;IACxD,CAAC,MAAM;MACHN,QAAQ,CAAC,CAAC,GAAGH,IAAI,CAACE,KAAK,EAAED,IAAI,CAACQ,GAAG,CAAC,CAAC;MACnC,IAAIT,IAAI,CAACY,MAAM,KAAKX,IAAI,CAACQ,GAAG,EAAE;QAC1BL,QAAQ,CAACR,eAAe,CAAC;UACrBe,EAAE,EAAEX,IAAI,CAACY,MAAM;UACfO,MAAM,EAAEnB,IAAI,CAACS,GAAG;UAChBG,MAAM,EAAEX,IAAI,CAACQ,GAAG;UAChBW,IAAI,EAAE;QACV,CAAC,CAAC,CAAC;QACHf,MAAM,CAACgB,IAAI,CAAC,kBAAkB,EAAE;UAC5BC,UAAU,EAAEtB,IAAI,CAACY,MAAM;UACvBO,MAAM,EAAEnB,IAAI,CAACS,GAAG;UAChBG,MAAM,EAAEX,IAAI,CAACQ,GAAG;UAChBc,MAAM,EAAEtB,IAAI,CAACsB,MAAM;UACnBC,QAAQ,EAAEvB,IAAI,CAACuB,QAAQ;UACvBJ,IAAI,EAAE,iBAAiB;UACvBK,IAAI,EAAE,IAAIC,IAAI;QAClB,CAAC,CAAC;MACN;IACJ;EACJ,CAAC;EAED,oBACI;IAAQ,OAAO,EAAEhB,UAAW;IAAA,UACvBR,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEK,IAAI,CAAEC,IAAI,IAAKA,IAAI,KAAKP,IAAI,CAACQ,GAAG,CAAC,gBACnC,QAAC,QAAQ;MAAC,QAAQ,EAAC,OAAO;MAAC,EAAE,EAAE;QAAEkB,KAAK,EAAE;MAAU;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,gBACtD,QAAC,cAAc;MAAC,QAAQ,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QAEnC;AAEjB,CAAC;AAAA,GA9CK5B,IAAI;EAAA,QAEWJ,WAAW;AAAA;AAAA,KAF1BI,IAAI;AAgDV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
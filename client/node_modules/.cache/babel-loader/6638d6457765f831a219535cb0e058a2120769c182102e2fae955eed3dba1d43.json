{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\IdeaProjects\\\\datn\\\\client\\\\src\\\\pages\\\\PostDetail\\\\Cmt.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { fetchCmt, fetchHomePosts, getCmt, getCmtStatus, getPostsError, getPostsStatus } from \"../../redux/postsSlice\";\nimport { getSuggestion } from \"../../redux/usersSlice\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { PostCard } from \"../../components\";\nimport { useAuth } from \"../../hooks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TimeAgo from \"./TimeAgo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cmt = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const dispatch = useDispatch();\n  const cmt = useSelector(getCmt);\n  const postStatus = useSelector(getCmtStatus);\n  const error = useSelector(getPostsError);\n  useEffect(() => {\n    dispatch(fetchCmt({\n      id: id\n    }));\n  }, [id]);\n  let content;\n  if (postStatus === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, this);\n  } else if (postStatus === 'succeeded') {\n    const orderedCmt = cmt.slice().sort((a, b) => b.date.localeCompare(a.date));\n    content = orderedCmt.map(cmt => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-info-cmt\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cmt !== null && cmt !== void 0 && cmt.avatar ? cmt.avatar : \"/img/avatar.jpg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cmt-container\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"cmt\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cmt-user\",\n              children: cmt.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), cmt.cmt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cmt-time\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(TimeAgo, {\n              timestamp: cmt.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this));\n  } else if (postStatus === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this);\n  }\n  return {\n    content\n  };\n};\n_s(Cmt, \"kk2kJAGGKsb/utM6UQkidlMJR0Y=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Cmt;\nexport default Cmt;\nvar _c;\n$RefreshReg$(_c, \"Cmt\");","map":{"version":3,"names":["useEffect","fetchCmt","fetchHomePosts","getCmt","getCmtStatus","getPostsError","getPostsStatus","getSuggestion","Loading","PostCard","useAuth","useDispatch","useSelector","TimeAgo","Cmt","id","dispatch","cmt","postStatus","error","content","orderedCmt","slice","sort","a","b","date","localeCompare","map","avatar","username"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/pages/PostDetail/Cmt.js"],"sourcesContent":["import {useEffect} from \"react\";\r\nimport {fetchCmt, fetchHomePosts, getCmt, getCmtStatus, getPostsError, getPostsStatus} from \"../../redux/postsSlice\";\r\nimport {getSuggestion} from \"../../redux/usersSlice\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport {PostCard} from \"../../components\";\r\nimport {useAuth} from \"../../hooks\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport TimeAgo from \"./TimeAgo\";\r\n\r\nconst Cmt = ({id}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const cmt = useSelector(getCmt)\r\n    const postStatus = useSelector(getCmtStatus);\r\n    const error = useSelector(getPostsError);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCmt({id: id}))\r\n    }, [id]);\r\n\r\n    let content;\r\n    if (postStatus === 'loading') {\r\n        content = <Loading/>;\r\n    } else if (postStatus === 'succeeded') {\r\n        const orderedCmt = cmt.slice().sort((a, b) => b.date.localeCompare(a.date))\r\n        content = orderedCmt.map(cmt =>\r\n            <div className=\"detail-info-cmt\">\r\n                <div><img src={cmt?.avatar ? cmt.avatar : \"/img/avatar.jpg\"} alt=\"\"/></div>\r\n                <div>\r\n                    <div className=\"cmt-container\">\r\n                            <span className=\"cmt\">\r\n                                <span className=\"cmt-user\">{cmt.username}</span>\r\n                                {cmt.cmt}\r\n                            </span>\r\n                    </div>\r\n                    <div className=\"cmt-time\"><p><TimeAgo timestamp={cmt.date}/></p></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else if (postStatus === 'failed') {\r\n        content = <p>{error}</p>;\r\n    }\r\n\r\n    return (\r\n        {content}\r\n    )\r\n}\r\n\r\nexport default Cmt"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,OAAO;AAC/B,SAAQC,QAAQ,EAAEC,cAAc,EAAEC,MAAM,EAAEC,YAAY,EAAEC,aAAa,EAAEC,cAAc,QAAO,wBAAwB;AACpH,SAAQC,aAAa,QAAO,wBAAwB;AACpD,OAAOC,OAAO,MAAM,kCAAkC;AACtD,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,SAAQC,OAAO,QAAO,aAAa;AACnC,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,OAAOC,OAAO,MAAM,WAAW;AAAC;AAEhC,MAAMC,GAAG,GAAG,QAAU;EAAA;EAAA,IAAT;IAACC;EAAE,CAAC;EAEb,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAMM,GAAG,GAAGL,WAAW,CAACT,MAAM,CAAC;EAC/B,MAAMe,UAAU,GAAGN,WAAW,CAACR,YAAY,CAAC;EAC5C,MAAMe,KAAK,GAAGP,WAAW,CAACP,aAAa,CAAC;EAExCL,SAAS,CAAC,MAAM;IACZgB,QAAQ,CAACf,QAAQ,CAAC;MAACc,EAAE,EAAEA;IAAE,CAAC,CAAC,CAAC;EAChC,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;EAER,IAAIK,OAAO;EACX,IAAIF,UAAU,KAAK,SAAS,EAAE;IAC1BE,OAAO,gBAAG,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EACxB,CAAC,MAAM,IAAIF,UAAU,KAAK,WAAW,EAAE;IACnC,MAAMG,UAAU,GAAGJ,GAAG,CAACK,KAAK,EAAE,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,IAAI,CAACC,aAAa,CAACH,CAAC,CAACE,IAAI,CAAC,CAAC;IAC3EN,OAAO,GAAGC,UAAU,CAACO,GAAG,CAACX,GAAG,iBACxB;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC5B;QAAA,uBAAK;UAAK,GAAG,EAAEA,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEY,MAAM,GAAGZ,GAAG,CAACY,MAAM,GAAG,iBAAkB;UAAC,GAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAAM,eAC3E;QAAA,wBACI;UAAK,SAAS,EAAC,eAAe;UAAA,uBACtB;YAAM,SAAS,EAAC,KAAK;YAAA,wBACjB;cAAM,SAAS,EAAC,UAAU;cAAA,UAAEZ,GAAG,CAACa;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAQ,EAC/Cb,GAAG,CAACA,GAAG;UAAA;YAAA;YAAA;YAAA;UAAA;QACL;UAAA;UAAA;UAAA;QAAA,QACT,eACN;UAAK,SAAS,EAAC,UAAU;UAAA,uBAAC;YAAA,uBAAG,QAAC,OAAO;cAAC,SAAS,EAAEA,GAAG,CAACS;YAAK;cAAA;cAAA;cAAA;YAAA;UAAE;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACpE;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,CACT;EACL,CAAC,MAAM,IAAIR,UAAU,KAAK,QAAQ,EAAE;IAChCE,OAAO,gBAAG;MAAA,UAAID;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAC5B;EAEA,OACI;IAACC;EAAO,CAAC;AAEjB,CAAC;AAAA,GArCKN,GAAG;EAAA,QAEYH,WAAW,EAChBC,WAAW,EACJA,WAAW,EAChBA,WAAW;AAAA;AAAA,KALvBE,GAAG;AAuCT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
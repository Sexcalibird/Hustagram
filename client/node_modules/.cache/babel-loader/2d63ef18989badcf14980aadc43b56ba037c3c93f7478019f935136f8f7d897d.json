{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { axiosPrivate } from \"../axios/axios\";\nconst initialState = {\n  chat: [],\n  messages: null,\n  status: 'idle',\n  //'idle' | 'loading' | 'succeeded' | 'failed'\n  error: null\n};\nexport const addNewChat = createAsyncThunk('chat/addNewChat', async (_ref, _ref2) => {\n  let {\n    userId1,\n    userId2\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const response = await axiosPrivate.post(`/chat`, {\n      userId1,\n      userId2\n    });\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\nexport const getChatList = createAsyncThunk('chat/getChatList', async (_ref3, _ref4) => {\n  let {\n    id\n  } = _ref3;\n  let {\n    rejectWithValue\n  } = _ref4;\n  try {\n    const response = await axiosPrivate.get(`/chat/${id}`);\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\nexport const getChat = createAsyncThunk('chat/getChat', async (_ref5, _ref6) => {\n  let {\n    userId1,\n    userId2\n  } = _ref5;\n  let {\n    rejectWithValue\n  } = _ref6;\n  try {\n    const response = await axiosPrivate.get(`/chat/${userId1}/${userId2}`);\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\nexport const newMessage = createAsyncThunk('chat/newMessage', async (_ref7, _ref8) => {\n  let {\n    id,\n    userId,\n    mess\n  } = _ref7;\n  let {\n    rejectWithValue\n  } = _ref8;\n  try {\n    const response = await axiosPrivate.post(`/chat/${id}`, {\n      userId,\n      mess\n    });\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\nconst chatSlice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    clearChat() {\n      return {\n        ...initialState\n      };\n    },\n    receiveMess(data) {\n      state.messages.messages.push(data);\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(addNewChat.fulfilled, (state, action) => {\n      state.chat.push(action.payload);\n    }).addCase(getChatList.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(getChatList.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.chat = action.payload;\n    }).addCase(getChat.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(getChat.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.messages = action.payload;\n    });\n  }\n});\nexport const getChats = state => state.chat.chat;\nexport const getMess = state => state.chat.messages;\nexport const getChatStatus = state => state.chat.status;\nexport const {\n  clearChat,\n  receiveMess\n} = chatSlice.actions;\nexport default chatSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosPrivate","initialState","chat","messages","status","error","addNewChat","userId1","userId2","rejectWithValue","response","post","data","err","message","getChatList","id","get","getChat","newMessage","userId","mess","chatSlice","name","reducers","clearChat","receiveMess","state","push","extraReducers","builder","addCase","fulfilled","action","payload","pending","getChats","getMess","getChatStatus","actions","reducer"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/redux/chatSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport {axiosPrivate} from \"../axios/axios\";\r\n\r\nconst initialState = {\r\n    chat: [],\r\n    messages: null,\r\n    status: 'idle', //'idle' | 'loading' | 'succeeded' | 'failed'\r\n    error: null\r\n}\r\n\r\nexport const addNewChat = createAsyncThunk('chat/addNewChat', async ({userId1, userId2},{rejectWithValue}) => {\r\n    try {\r\n        const response = await axiosPrivate.post(`/chat`, {userId1, userId2})\r\n        return response.data\r\n    } catch (err) {\r\n        return rejectWithValue(err.message)\r\n    }\r\n})\r\n\r\nexport const getChatList = createAsyncThunk('chat/getChatList', async ({id},{rejectWithValue}) => {\r\n    try {\r\n        const response = await axiosPrivate.get(`/chat/${id}`)\r\n        return response.data\r\n    } catch (err) {\r\n        return rejectWithValue(err.message)\r\n    }\r\n})\r\n\r\nexport const getChat = createAsyncThunk('chat/getChat', async ({userId1, userId2},{rejectWithValue}) => {\r\n    try {\r\n        const response = await axiosPrivate.get(`/chat/${userId1}/${userId2}`)\r\n        return response.data\r\n    } catch (err) {\r\n        return rejectWithValue(err.message)\r\n    }\r\n})\r\n\r\nexport const newMessage = createAsyncThunk('chat/newMessage', async ({id, userId, mess},{rejectWithValue}) => {\r\n    try {\r\n        const response = await axiosPrivate.post(`/chat/${id}`, {userId, mess})\r\n        return response.data\r\n    } catch (err) {\r\n        return rejectWithValue(err.message)\r\n    }\r\n})\r\n\r\nconst chatSlice = createSlice({\r\n    name: 'chat',\r\n    initialState,\r\n    reducers: {\r\n        clearChat() {\r\n            return {...initialState}\r\n        },\r\n        receiveMess(data) {\r\n            state.messages.messages.push(data)\r\n        }\r\n    },\r\n    extraReducers(builder){\r\n        builder\r\n\r\n            .addCase(addNewChat.fulfilled, (state, action) => {\r\n                state.chat.push(action.payload)\r\n            })\r\n\r\n            .addCase(getChatList.pending, (state, action) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(getChatList.fulfilled, (state, action) => {\r\n                state.status = 'succeeded'\r\n                state.chat = action.payload\r\n            })\r\n\r\n            .addCase(getChat.pending, (state, action) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(getChat.fulfilled, (state, action) => {\r\n                state.status = 'succeeded'\r\n                state.messages = action.payload\r\n            })\r\n\r\n    }\r\n})\r\n\r\nexport const getChats = (state) => state.chat.chat\r\nexport const getMess = (state) => state.chat.messages\r\nexport const getChatStatus = (state) => state.chat.status\r\nexport const {clearChat, receiveMess} = chatSlice.actions\r\nexport default chatSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
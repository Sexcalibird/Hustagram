{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\IdeaProjects\\\\datn\\\\client\\\\src\\\\pages\\\\messages\\\\Users.js\",\n  _s = $RefreshSig$();\nimport './messages.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getChatList, getChats, getChatStatus } from \"../../redux/chatSlice\";\nimport { useEffect } from \"react\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { PostCard } from \"../../components\";\nimport { useAuth } from \"../../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const auth = useAuth();\n  const dispatch = useDispatch();\n  const chats = useSelector(getChats);\n  const status = useSelector(getChatStatus);\n  useEffect(() => {\n    dispatch(getChatList({\n      id: auth._id\n    }));\n  }, []);\n  console.log(chats);\n\n  /*let content;\r\n  if (status === 'loading') {\r\n      content = <Loading/>;\r\n  } else if (status === 'succeeded') {\r\n      /*const orderedPosts = chats.slice().sort((a, b) => b.createdAt.localeCompare(a.createdAt))*/\n  /*content = chats.map((c,i) =>\r\n      <div key={i} className=\"mess-user\">\r\n          <img src={c.avatar ? c.avatar : \"/img/avatar.jpg\"} alt=\"\"/>\r\n          <h4>{c.username}</h4>\r\n      </div>\r\n  )\r\n  } else if (status === 'failed') {\r\n  content = <p>ERROR</p>;\r\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"f\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Users, \"T8sshB+2kGsFsgqTakjvtaU36jQ=\", false, function () {\n  return [useAuth, useDispatch, useSelector, useSelector];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["useDispatch","useSelector","getChatList","getChats","getChatStatus","useEffect","Loading","PostCard","useAuth","Users","auth","dispatch","chats","status","id","_id","console","log"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/pages/messages/Users.js"],"sourcesContent":["import './messages.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getChatList, getChats, getChatStatus} from \"../../redux/chatSlice\";\r\nimport {useEffect} from \"react\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport {PostCard} from \"../../components\";\r\nimport {useAuth} from \"../../hooks\";\r\n\r\nconst Users = () => {\r\n\r\n    const auth = useAuth()\r\n    const dispatch = useDispatch()\r\n    const chats = useSelector(getChats)\r\n    const status = useSelector(getChatStatus)\r\n\r\n    useEffect(() => {\r\n        dispatch(getChatList({id: auth._id}))\r\n    }, []);\r\n\r\n    console.log(chats)\r\n\r\n    /*let content;\r\n    if (status === 'loading') {\r\n        content = <Loading/>;\r\n    } else if (status === 'succeeded') {\r\n        /*const orderedPosts = chats.slice().sort((a, b) => b.createdAt.localeCompare(a.createdAt))*/\r\n        /*content = chats.map((c,i) =>\r\n            <div key={i} className=\"mess-user\">\r\n                <img src={c.avatar ? c.avatar : \"/img/avatar.jpg\"} alt=\"\"/>\r\n                <h4>{c.username}</h4>\r\n            </div>\r\n        )\r\n    } else if (status === 'failed') {\r\n        content = <p>ERROR</p>;\r\n    }*/\r\n\r\n    return (\r\n        <div>f</div>\r\n    )\r\n}\r\n\r\nexport default Users"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,SAAQA,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,WAAW,EAAEC,QAAQ,EAAEC,aAAa,QAAO,uBAAuB;AAC1E,SAAQC,SAAS,QAAO,OAAO;AAC/B,OAAOC,OAAO,MAAM,kCAAkC;AACtD,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,SAAQC,OAAO,QAAO,aAAa;AAAC;AAEpC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAEhB,MAAMC,IAAI,GAAGF,OAAO,EAAE;EACtB,MAAMG,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,KAAK,GAAGX,WAAW,CAACE,QAAQ,CAAC;EACnC,MAAMU,MAAM,GAAGZ,WAAW,CAACG,aAAa,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACZM,QAAQ,CAACT,WAAW,CAAC;MAACY,EAAE,EAAEJ,IAAI,CAACK;IAAG,CAAC,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;;EAElB;AACJ;AACA;AACA;AACA;EACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAY;AAEpB,CAAC;AAAA,GA/BKH,KAAK;EAAA,QAEMD,OAAO,EACHR,WAAW,EACdC,WAAW,EACVA,WAAW;AAAA;AAAA,KALxBQ,KAAK;AAiCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
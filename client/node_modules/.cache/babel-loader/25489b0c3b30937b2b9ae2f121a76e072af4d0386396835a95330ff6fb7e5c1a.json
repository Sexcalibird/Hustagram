{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\IdeaProjects\\\\datn\\\\client\\\\src\\\\pages\\\\messages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport './messages.css';\nimport { useAuth } from \"../../hooks\";\nimport Users from \"./Users\";\nimport { SentimentSatisfiedAlt } from \"@mui/icons-material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearChat, getChatList, getChats, getMess, newMessage } from \"../../redux/chatSlice\";\nimport { Link } from \"react-router-dom\";\nimport Mess from \"./Mess\";\nimport { clearUsers } from \"../../redux/usersSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  const auth = useAuth();\n  const mess = useSelector(getMess);\n  const dispatch = useDispatch();\n  const [newMess, setNewMess] = useState('');\n  const [header, setHeader] = useState({\n    img: '',\n    username: ''\n  });\n  useEffect(() => {\n    return () => {\n      dispatch(clearChat());\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mess-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mess-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mess-users\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mess-auth\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: auth.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Users, {\n            setHeader: setHeader\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mess-main\",\n        children: mess !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/${header.username}`,\n            className: \"mess-user mess-main-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: header.img,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: header.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mess-inbox\",\n            children: mess.messages.map((m, i) => /*#__PURE__*/_jsxDEV(Mess, {\n              m: m,\n              own: m.userId === auth._id\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 61\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mess-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(SentimentSatisfiedAlt, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Aa\",\n              value: newMess,\n              onChange: e => setNewMess(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => dispatch(newMessage({\n                id: mess._id,\n                userId: auth._id,\n                mess: newMess\n              })),\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Messages, \"7oWu1Hvw7BKqobxS5m/ao1S9HRc=\", false, function () {\n  return [useAuth, useSelector, useDispatch];\n});\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["useAuth","Users","SentimentSatisfiedAlt","useEffect","useState","useDispatch","useSelector","clearChat","getChatList","getChats","getMess","newMessage","Link","Mess","clearUsers","Messages","auth","mess","dispatch","newMess","setNewMess","header","setHeader","img","username","padding","messages","map","m","i","userId","_id","e","target","value","id"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/pages/messages/Messages.js"],"sourcesContent":["import './messages.css'\r\nimport {useAuth} from \"../../hooks\";\r\nimport Users from \"./Users\";\r\nimport {SentimentSatisfiedAlt} from \"@mui/icons-material\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearChat, getChatList, getChats, getMess, newMessage} from \"../../redux/chatSlice\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Mess from \"./Mess\";\r\nimport {clearUsers} from \"../../redux/usersSlice\";\r\n\r\nconst Messages = () => {\r\n\r\n    const auth = useAuth()\r\n    const mess = useSelector(getMess)\r\n    const dispatch = useDispatch()\r\n\r\n    const [newMess, setNewMess] = useState('')\r\n    const [header, setHeader] = useState({\r\n        img: '',\r\n        username: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearChat())\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"mess-page\">\r\n            <div className=\"mess-container\">\r\n                <div className=\"mess-users\">\r\n                    <div className=\"mess-auth\">\r\n                        <h4>{auth.username}</h4>\r\n                    </div>\r\n                    <div style={{padding: '10px'}}>\r\n                        <Users setHeader={setHeader}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mess-main\">\r\n                    {mess !== null && (\r\n                        <>\r\n                            <Link to={`/${header.username}`} className=\"mess-user mess-main-header\">\r\n                                <img src={header.img} alt=\"\"/>\r\n                                <h4>{header.username}</h4>\r\n                            </Link>\r\n                            <div className=\"mess-inbox\">\r\n                                {mess.messages.map((m,i) => <Mess m={m} key={i} own={m.userId === auth._id}/>)}\r\n                            </div>\r\n\r\n                            <div className=\"mess-input\">\r\n                                <button><SentimentSatisfiedAlt fontSize=\"large\"/></button>\r\n                                <textarea\r\n                                    placeholder=\"Aa\"\r\n                                    value={newMess}\r\n                                    onChange={(e) => setNewMess(e.target.value)}\r\n                                />\r\n                                <button\r\n                                    onClick={() =>\r\n                                        dispatch(newMessage({id: mess._id, userId: auth._id, mess: newMess}))\r\n                                }\r\n                                >Send</button>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,SAAQA,OAAO,QAAO,aAAa;AACnC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAAQC,qBAAqB,QAAO,qBAAqB;AACzD,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,UAAU,QAAO,uBAAuB;AAC3F,SAAQC,IAAI,QAAO,kBAAkB;AACrC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAAQC,UAAU,QAAO,wBAAwB;AAAC;AAAA;AAElD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAEnB,MAAMC,IAAI,GAAGhB,OAAO,EAAE;EACtB,MAAMiB,IAAI,GAAGX,WAAW,CAACI,OAAO,CAAC;EACjC,MAAMQ,QAAQ,GAAGb,WAAW,EAAE;EAE9B,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC;IACjCmB,GAAG,EAAE,EAAE;IACPC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEFrB,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACTe,QAAQ,CAACX,SAAS,EAAE,CAAC;IACzB,CAAC;EACL,CAAC,EAAC,EAAE,CAAC;EAEL,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,uBACtB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC3B;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAK,SAAS,EAAC,WAAW;UAAA,uBACtB;YAAA,UAAKS,IAAI,CAACQ;UAAQ;YAAA;YAAA;YAAA;UAAA;QAAM;UAAA;UAAA;UAAA;QAAA,QACtB,eACN;UAAK,KAAK,EAAE;YAACC,OAAO,EAAE;UAAM,CAAE;UAAA,uBAC1B,QAAC,KAAK;YAAC,SAAS,EAAEH;UAAU;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QAC5B;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ,eAEN;QAAK,SAAS,EAAC,WAAW;QAAA,UACrBL,IAAI,KAAK,IAAI,iBACV;UAAA,wBACI,QAAC,IAAI;YAAC,EAAE,EAAG,IAAGI,MAAM,CAACG,QAAS,EAAE;YAAC,SAAS,EAAC,4BAA4B;YAAA,wBACnE;cAAK,GAAG,EAAEH,MAAM,CAACE,GAAI;cAAC,GAAG,EAAC;YAAE;cAAA;cAAA;cAAA;YAAA,QAAE,eAC9B;cAAA,UAAKF,MAAM,CAACG;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAM;UAAA;YAAA;YAAA;YAAA;UAAA,QACvB,eACP;YAAK,SAAS,EAAC,YAAY;YAAA,UACtBP,IAAI,CAACS,QAAQ,CAACC,GAAG,CAAC,CAACC,CAAC,EAACC,CAAC,kBAAK,QAAC,IAAI;cAAC,CAAC,EAAED,CAAE;cAAS,GAAG,EAAEA,CAAC,CAACE,MAAM,KAAKd,IAAI,CAACe;YAAI,GAA9BF,CAAC;cAAA;cAAA;cAAA;YAAA,QAA+B;UAAC;YAAA;YAAA;YAAA;UAAA,QAC5E,eAEN;YAAK,SAAS,EAAC,YAAY;YAAA,wBACvB;cAAA,uBAAQ,QAAC,qBAAqB;gBAAC,QAAQ,EAAC;cAAO;gBAAA;gBAAA;gBAAA;cAAA;YAAE;cAAA;cAAA;cAAA;YAAA,QAAS,eAC1D;cACI,WAAW,EAAC,IAAI;cAChB,KAAK,EAAEV,OAAQ;cACf,QAAQ,EAAGa,CAAC,IAAKZ,UAAU,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QAC9C,eACF;cACI,OAAO,EAAE,MACLhB,QAAQ,CAACP,UAAU,CAAC;gBAACwB,EAAE,EAAElB,IAAI,CAACc,GAAG;gBAAED,MAAM,EAAEd,IAAI,CAACe,GAAG;gBAAEd,IAAI,EAAEE;cAAO,CAAC,CAAC,CAC3E;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QACa;UAAA;YAAA;YAAA;YAAA;UAAA,QACZ;QAAA;MAEb;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA5DKJ,QAAQ;EAAA,QAEGf,OAAO,EACPM,WAAW,EACPD,WAAW;AAAA;AAAA,KAJ1BU,QAAQ;AA8Dd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
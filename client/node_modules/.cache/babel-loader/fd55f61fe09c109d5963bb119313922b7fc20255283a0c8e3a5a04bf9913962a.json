{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\IdeaProjects\\\\datn\\\\client\\\\src\\\\pages\\\\messages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport './messages.css';\nimport { useAuth } from \"../../hooks\";\nimport Users from \"./Users\";\nimport { SentimentSatisfiedAlt } from \"@mui/icons-material\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearChat, getChats, getMess, newMessage, receiveMess } from \"../../redux/chatSlice\";\nimport { Link } from \"react-router-dom\";\nimport Mess from \"./Mess\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  const auth = useAuth();\n  const chats = useSelector(getChats);\n  const mess = useSelector(getMess);\n  const dispatch = useDispatch();\n  const scrollRef = useRef();\n  const [newMess, setNewMess] = useState('');\n  const [header, setHeader] = useState({\n    img: '',\n    username: ''\n  });\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      dispatch(receiveMess(data));\n    });\n  }, []);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", auth._id);\n    socket.current.on(\"getUsers\", users => {\n      console.log(users);\n    });\n  }, [auth]);\n  useEffect(() => {\n    const found = chats.find(c => c._id === (mess === null || mess === void 0 ? void 0 : mess._id));\n    setHeader({\n      img: found !== null && found !== void 0 && found.avatar ? found.avatar : \"/img/avatar.jpg\",\n      username: found === null || found === void 0 ? void 0 : found.username\n    });\n  }, []);\n  useEffect(() => {\n    return () => {\n      dispatch(clearChat());\n    };\n  }, []);\n  const handleSend = () => {\n    dispatch(newMessage({\n      id: mess._id,\n      userId: auth._id,\n      mess: newMess\n    })).unwrap().then(() => setNewMess('')).catch(err => {\n      return err.message;\n    });\n    socket.current.emit(\"sendMessage\", {\n      userId: auth._id,\n      receiverId: mess.members.find(member => member !== auth._id),\n      mess: newMess,\n      date: new Date()\n    });\n  };\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [mess]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mess-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mess-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mess-users\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mess-auth\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: auth.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Users, {\n            setHeader: setHeader,\n            mess: mess,\n            chats: chats\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mess-main\",\n        children: mess !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/${header.username}`,\n            className: \"mess-user mess-main-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: header.img,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: header.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mess-inbox\",\n            children: mess.messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: scrollRef,\n              children: /*#__PURE__*/_jsxDEV(Mess, {\n                m: m,\n                own: m.userId === auth._id,\n                user: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mess-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(SentimentSatisfiedAlt, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Aa\",\n              value: newMess,\n              onChange: e => setNewMess(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSend,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(Messages, \"rcuDNiNUHdVvcC2QOfVGklob1Xo=\", false, function () {\n  return [useAuth, useSelector, useSelector, useDispatch];\n});\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["useAuth","Users","SentimentSatisfiedAlt","useEffect","useRef","useState","useDispatch","useSelector","clearChat","getChats","getMess","newMessage","receiveMess","Link","Mess","io","Messages","auth","chats","mess","dispatch","scrollRef","newMess","setNewMess","header","setHeader","img","username","socket","current","on","data","emit","_id","users","console","log","found","find","c","avatar","handleSend","id","userId","unwrap","then","catch","err","message","receiverId","members","member","date","Date","scrollIntoView","behavior","padding","messages","map","m","i","e","target","value"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/pages/messages/Messages.js"],"sourcesContent":["import './messages.css'\r\nimport {useAuth} from \"../../hooks\";\r\nimport Users from \"./Users\";\r\nimport {SentimentSatisfiedAlt} from \"@mui/icons-material\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearChat, getChats, getMess, newMessage, receiveMess} from \"../../redux/chatSlice\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Mess from \"./Mess\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst Messages = () => {\r\n\r\n    const auth = useAuth()\r\n    const chats = useSelector(getChats)\r\n    const mess = useSelector(getMess)\r\n    const dispatch = useDispatch()\r\n    const scrollRef = useRef()\r\n\r\n    const [newMess, setNewMess] = useState('')\r\n    const [header, setHeader] = useState({\r\n        img: '',\r\n        username: ''\r\n    })\r\n\r\n    const socket = useRef()\r\n    useEffect(() => {\r\n        socket.current = io(\"ws://localhost:8900\")\r\n        socket.current.on(\"getMessage\", (data) => {\r\n            dispatch(receiveMess(data))\r\n        });\r\n    },[])\r\n    useEffect(() => {\r\n        socket.current.emit(\"addUser\", auth._id)\r\n        socket.current.on(\"getUsers\", users => {\r\n            console.log(users)\r\n        })\r\n    },[auth])\r\n\r\n    useEffect(() => {\r\n\r\n            const found = chats.find(c => c._id === mess?._id)\r\n            setHeader({\r\n                img: found?.avatar ? found.avatar : \"/img/avatar.jpg\",\r\n                username: found?.username\r\n            })\r\n\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearChat())\r\n        }\r\n    },[])\r\n\r\n    const handleSend = () => {\r\n        dispatch(newMessage({id: mess._id, userId: auth._id, mess: newMess}))\r\n            .unwrap()\r\n            .then(() => setNewMess(''))\r\n            .catch(err => {\r\n                return err.message\r\n            })\r\n\r\n        socket.current.emit(\"sendMessage\", {\r\n            userId: auth._id,\r\n            receiverId: mess.members.find((member) => member !== auth._id),\r\n            mess: newMess,\r\n            date: new Date(),\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [mess]);\r\n\r\n    return (\r\n        <div className=\"mess-page\">\r\n            <div className=\"mess-container\">\r\n                <div className=\"mess-users\">\r\n                    <div className=\"mess-auth\">\r\n                        <h4>{auth.username}</h4>\r\n                    </div>\r\n                    <div style={{padding: '10px'}}>\r\n                        <Users setHeader={setHeader} mess={mess} chats={chats}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mess-main\">\r\n                    {mess !== null && (\r\n                        <>\r\n                            <Link to={`/${header.username}`} className=\"mess-user mess-main-header\">\r\n                                <img src={header.img} alt=\"\"/>\r\n                                <h4>{header.username}</h4>\r\n                            </Link>\r\n                            <div className=\"mess-inbox\">\r\n                                {mess.messages.map((m,i) =>\r\n                                    <div ref={scrollRef} key={i}>\r\n                                        <Mess m={m} own={m.userId === auth._id} user={header}/>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"mess-input\">\r\n                                <button><SentimentSatisfiedAlt fontSize=\"large\"/></button>\r\n                                <textarea\r\n                                    placeholder=\"Aa\"\r\n                                    value={newMess}\r\n                                    onChange={(e) => setNewMess(e.target.value)}\r\n                                />\r\n                                <button onClick={handleSend}>Send</button>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
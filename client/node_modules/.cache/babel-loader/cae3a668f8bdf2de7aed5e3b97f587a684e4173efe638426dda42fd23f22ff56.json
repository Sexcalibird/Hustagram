{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { axiosPrivate } from \"../axios/axios\";\nconst initialState = {\n  search: [],\n  status: 'idle',\n  //'idle' | 'loading' | 'succeeded' | 'failed'\n  error: null\n};\nexport const fetchSearch = createAsyncThunk('search/fetchSearch', async (_ref, _ref2) => {\n  let {\n    search\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n  console.log(search);\n  try {\n    const response = await axiosPrivate.get(`/search?search=${search}`);\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\nconst searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    clearSearch() {\n      return {\n        ...initialState\n      };\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchSearch.fulfilled, (state, action) => {\n      state.search = action.payload;\n    });\n  }\n});\nexport const getSearch = state => state.search.search;\nexport const {\n  clearSearch\n} = searchSlice.actions;\nexport default searchSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosPrivate","initialState","search","status","error","fetchSearch","rejectWithValue","console","log","response","get","data","err","message","searchSlice","name","reducers","clearSearch","extraReducers","builder","addCase","fulfilled","state","action","payload","getSearch","actions","reducer"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/redux/searchSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport {axiosPrivate} from \"../axios/axios\";\r\n\r\nconst initialState = {\r\n    search: [],\r\n    status: 'idle', //'idle' | 'loading' | 'succeeded' | 'failed'\r\n    error: null\r\n}\r\n\r\nexport const fetchSearch = createAsyncThunk('search/fetchSearch', async ({search},{rejectWithValue}) => {\r\n    console.log(search)\r\n    try {\r\n        const response = await axiosPrivate.get(`/search?search=${search}`)\r\n        return response.data\r\n    } catch (err) {\r\n        return rejectWithValue(err.message)\r\n    }\r\n})\r\n\r\nconst searchSlice = createSlice({\r\n    name: 'search',\r\n    initialState,\r\n    reducers: {\r\n        clearSearch() {\r\n            return {...initialState}\r\n        }\r\n    },\r\n    extraReducers(builder){\r\n        builder\r\n\r\n            .addCase(fetchSearch.fulfilled, (state, action) => {\r\n                state.search = action.payload\r\n            })\r\n\r\n    }\r\n})\r\n\r\nexport const getSearch = (state) => state.search.search\r\nexport const {clearSearch} = searchSlice.actions\r\nexport default searchSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9D,SAAQC,YAAY,QAAO,gBAAgB;AAE3C,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE,MAAM;EAAE;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGN,gBAAgB,CAAC,oBAAoB,EAAE,uBAAsC;EAAA,IAA/B;IAACG;EAAM,CAAC;EAAA,IAAC;IAACI;EAAe,CAAC;EAC/FC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;EACnB,IAAI;IACA,MAAMO,QAAQ,GAAG,MAAMT,YAAY,CAACU,GAAG,CAAE,kBAAiBR,MAAO,EAAC,CAAC;IACnE,OAAOO,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAON,eAAe,CAACM,GAAG,CAACC,OAAO,CAAC;EACvC;AACJ,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGhB,WAAW,CAAC;EAC5BiB,IAAI,EAAE,QAAQ;EACdd,YAAY;EACZe,QAAQ,EAAE;IACNC,WAAW,GAAG;MACV,OAAO;QAAC,GAAGhB;MAAY,CAAC;IAC5B;EACJ,CAAC;EACDiB,aAAa,CAACC,OAAO,EAAC;IAClBA,OAAO,CAEFC,OAAO,CAACf,WAAW,CAACgB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACpB,MAAM,GAAGqB,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC;EAEV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAIH,KAAK,IAAKA,KAAK,CAACpB,MAAM,CAACA,MAAM;AACvD,OAAO,MAAM;EAACe;AAAW,CAAC,GAAGH,WAAW,CAACY,OAAO;AAChD,eAAeZ,WAAW,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
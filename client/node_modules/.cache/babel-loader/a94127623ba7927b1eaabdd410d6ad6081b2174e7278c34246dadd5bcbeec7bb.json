{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from '../axios/axios';\nimport { refreshToken } from \"../redux/authSlice\";\nimport { useDispatch } from \"react-redux\";\nconst useRefreshToken = () => {\n  _s();\n  const dispatch = useDispatch();\n  return async () => {\n    const response = await axios.get('/refresh', {\n      withCredentials: true\n    });\n    dispatch(refreshToken(response.data.accessToken));\n    console.log(response.data.accessToken);\n    return response.data.accessToken;\n  };\n};\n_s(useRefreshToken, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\nexport default useRefreshToken;","map":{"version":3,"names":["axios","refreshToken","useDispatch","useRefreshToken","dispatch","response","get","withCredentials","data","accessToken","console","log"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/hooks/useRefreshToken.js"],"sourcesContent":["import axios from '../axios/axios';\r\nimport {refreshToken} from \"../redux/authSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst useRefreshToken = () => {\r\n    const dispatch = useDispatch()\r\n    return async () => {\r\n        const response = await axios.get('/refresh', {\r\n            withCredentials: true\r\n        });\r\n        dispatch(refreshToken(response.data.accessToken))\r\n        console.log(response.data.accessToken)\r\n        return response.data.accessToken;\r\n    }\r\n};\r\n\r\nexport default useRefreshToken;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAClC,SAAQC,YAAY,QAAO,oBAAoB;AAC/C,SAAQC,WAAW,QAAO,aAAa;AAEvC,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC1B,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,OAAO,YAAY;IACf,MAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,UAAU,EAAE;MACzCC,eAAe,EAAE;IACrB,CAAC,CAAC;IACFH,QAAQ,CAACH,YAAY,CAACI,QAAQ,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC;IACjDC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACG,IAAI,CAACC,WAAW,CAAC;IACtC,OAAOJ,QAAQ,CAACG,IAAI,CAACC,WAAW;EACpC,CAAC;AACL,CAAC;AAAC,GAVIN,eAAe;EAAA,QACAD,WAAW;AAAA;AAWhC,eAAeC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}
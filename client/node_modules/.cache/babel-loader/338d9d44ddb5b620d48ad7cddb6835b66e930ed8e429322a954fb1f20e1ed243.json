{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\IdeaProjects\\\\datn\\\\client\\\\src\\\\pages\\\\messages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport './messages.css';\nimport { useAuth } from \"../../hooks\";\nimport Users from \"./Users\";\nimport { SentimentSatisfiedAlt } from \"@mui/icons-material\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearChat, getChats, getMess, newMessage, receiveMess } from \"../../redux/chatSlice\";\nimport { Link } from \"react-router-dom\";\nimport Mess from \"./Mess\";\nimport CreateContext from \"../../context/ContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  const auth = useAuth();\n  const mess = useSelector(getMess);\n  const chats = useSelector(getChats);\n  const dispatch = useDispatch();\n  const scrollRef = useRef();\n  const {\n    socket\n  } = useContext(CreateContext);\n  const [newMess, setNewMess] = useState('');\n  const [header, setHeader] = useState({\n    img: '',\n    username: ''\n  });\n  useEffect(() => {\n    if (mess !== null) {\n      const found = chats.find(c => c._id === mess._id);\n      setHeader({\n        img: found.avatar ? found.avatar : \"/img/avatar.jpg\",\n        username: found.username\n      });\n    }\n  }, [chats]);\n  useEffect(() => {\n    socket.on(\"getMessage\", data => {\n      dispatch(receiveMess(data));\n    });\n  }, []);\n  useEffect(() => {\n    return () => {\n      dispatch(clearChat());\n    };\n  }, []);\n  const handleSend = () => {\n    dispatch(newMessage({\n      id: mess._id,\n      userId: auth._id,\n      mess: newMess\n    })).unwrap().then().catch(err => {\n      return err.message;\n    });\n    socket.emit(\"sendMessage\", {\n      userId: auth._id,\n      receiverId: mess.members.find(member => member !== auth._id),\n      mess: newMess,\n      date: new Date()\n    });\n  };\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [mess]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mess-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mess-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mess-users\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mess-auth\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: auth.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Users, {\n            setHeader: setHeader,\n            mess: mess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mess-main\",\n        children: mess !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/${header.username}`,\n            className: \"mess-user mess-main-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: header.img,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: header.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mess-inbox\",\n            children: mess.messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: scrollRef,\n              children: /*#__PURE__*/_jsxDEV(Mess, {\n                m: m,\n                own: m.userId === auth._id,\n                user: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 41\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mess-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(SentimentSatisfiedAlt, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Aa\",\n              value: newMess,\n              onChange: e => setNewMess(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSend,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(Messages, \"yukf5PdoshVMR6vpFs1cVNeFjDM=\", false, function () {\n  return [useAuth, useSelector, useSelector, useDispatch];\n});\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["useAuth","Users","SentimentSatisfiedAlt","useContext","useEffect","useRef","useState","useDispatch","useSelector","clearChat","getChats","getMess","newMessage","receiveMess","Link","Mess","CreateContext","Messages","auth","mess","chats","dispatch","scrollRef","socket","newMess","setNewMess","header","setHeader","img","username","found","find","c","_id","avatar","on","data","handleSend","id","userId","unwrap","then","catch","err","message","emit","receiverId","members","member","date","Date","current","scrollIntoView","behavior","padding","messages","map","m","i","e","target","value"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/pages/messages/Messages.js"],"sourcesContent":["import './messages.css'\r\nimport {useAuth} from \"../../hooks\";\r\nimport Users from \"./Users\";\r\nimport {SentimentSatisfiedAlt} from \"@mui/icons-material\";\r\nimport {useContext, useEffect, useRef, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearChat, getChats, getMess, newMessage, receiveMess} from \"../../redux/chatSlice\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Mess from \"./Mess\";\r\nimport CreateContext from \"../../context/ContextProvider\";\r\n\r\nconst Messages = () => {\r\n\r\n    const auth = useAuth()\r\n    const mess = useSelector(getMess)\r\n    const chats = useSelector(getChats)\r\n    const dispatch = useDispatch()\r\n    const scrollRef = useRef()\r\n    const {socket} = useContext(CreateContext)\r\n    \r\n    const [newMess, setNewMess] = useState('')\r\n    const [header, setHeader] = useState({\r\n        img: '',\r\n        username: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (mess !== null) {\r\n            const found = chats.find(c => c._id === mess._id)\r\n            setHeader({\r\n                img: found.avatar ? found.avatar : \"/img/avatar.jpg\",\r\n                username: found.username\r\n            })\r\n        }\r\n    },[chats])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on(\"getMessage\", (data) => {\r\n            dispatch(receiveMess(data))\r\n        });\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearChat())\r\n        }\r\n    },[])\r\n\r\n    const handleSend = () => {\r\n        dispatch(newMessage({id: mess._id, userId: auth._id, mess: newMess}))\r\n            .unwrap()\r\n            .then()\r\n            .catch(err => {\r\n                return err.message\r\n            })\r\n        socket.emit(\"sendMessage\", {\r\n            userId: auth._id,\r\n            receiverId: mess.members.find((member) => member !== auth._id),\r\n            mess: newMess,\r\n            date: new Date(),\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [mess]);\r\n\r\n    return (\r\n        <div className=\"mess-page\">\r\n            <div className=\"mess-container\">\r\n                <div className=\"mess-users\">\r\n                    <div className=\"mess-auth\">\r\n                        <h4>{auth.username}</h4>\r\n                    </div>\r\n                    <div style={{padding: '10px'}}>\r\n                        <Users setHeader={setHeader} mess={mess}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mess-main\">\r\n                    {mess !== null && (\r\n                        <>\r\n                            <Link to={`/${header.username}`} className=\"mess-user mess-main-header\">\r\n                                <img src={header.img} alt=\"\"/>\r\n                                <h4>{header.username}</h4>\r\n                            </Link>\r\n                            <div className=\"mess-inbox\">\r\n                                {mess.messages.map((m,i) =>\r\n                                    <div ref={scrollRef} key={i}>\r\n                                        <Mess m={m} own={m.userId === auth._id} user={header}/>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"mess-input\">\r\n                                <button><SentimentSatisfiedAlt fontSize=\"large\"/></button>\r\n                                <textarea\r\n                                    placeholder=\"Aa\"\r\n                                    value={newMess}\r\n                                    onChange={(e) => setNewMess(e.target.value)}\r\n                                />\r\n                                <button onClick={handleSend}>Send</button>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
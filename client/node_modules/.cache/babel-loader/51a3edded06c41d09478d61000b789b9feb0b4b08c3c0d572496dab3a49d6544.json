{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\IdeaProjects\\\\datn\\\\client\\\\src\\\\pages\\\\messages\\\\Users.js\",\n  _s = $RefreshSig$();\nimport './messages.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getChatList, getChats, getChatStatus } from \"../../redux/chatSlice\";\nimport { useEffect } from \"react\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { PostCard } from \"../../components\";\nimport { useAuth } from \"../../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const auth = useAuth();\n  const dispatch = useDispatch();\n  const chats = useSelector(getChats);\n  const status = useSelector(getChatStatus);\n  useEffect(() => {\n    dispatch(getChatList({\n      id: auth._id\n    }));\n  }, []);\n  let content;\n  if (status === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }, this);\n  } else if (status === 'succeeded') {\n    const orderedChats = chats.slice().sort((a, b) => b.updatedAt.localeCompare(a.updatedAt));\n    content = orderedChats.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mess-user\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: c.avatar ? c.avatar : \"/img/avatar.jpg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: c.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this));\n  } else if (status === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"ERROR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: content\n  }, void 0, false);\n};\n_s(Users, \"T8sshB+2kGsFsgqTakjvtaU36jQ=\", false, function () {\n  return [useAuth, useDispatch, useSelector, useSelector];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["useDispatch","useSelector","getChatList","getChats","getChatStatus","useEffect","Loading","PostCard","useAuth","Users","auth","dispatch","chats","status","id","_id","content","orderedChats","slice","sort","a","b","updatedAt","localeCompare","map","c","i","avatar","username"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/pages/messages/Users.js"],"sourcesContent":["import './messages.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getChatList, getChats, getChatStatus} from \"../../redux/chatSlice\";\r\nimport {useEffect} from \"react\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport {PostCard} from \"../../components\";\r\nimport {useAuth} from \"../../hooks\";\r\n\r\nconst Users = () => {\r\n\r\n    const auth = useAuth()\r\n    const dispatch = useDispatch()\r\n    const chats = useSelector(getChats)\r\n    const status = useSelector(getChatStatus)\r\n\r\n    useEffect(() => {\r\n        dispatch(getChatList({id: auth._id}))\r\n    }, []);\r\n\r\n    let content;\r\n    if (status === 'loading') {\r\n        content = <Loading/>;\r\n    } else if (status === 'succeeded') {\r\n        const orderedChats = chats.slice().sort((a, b) => b.updatedAt.localeCompare(a.updatedAt))\r\n        content = orderedChats.map((c,i) =>\r\n            <div key={i} className=\"mess-user\">\r\n                <img src={c.avatar ? c.avatar : \"/img/avatar.jpg\"} alt=\"\"/>\r\n                <h4>{c.username}</h4>\r\n            </div>\r\n        )\r\n    } else if (status === 'failed') {\r\n        content = <p>ERROR</p>;\r\n    }\r\n\r\n    return (\r\n        <>{content}</>\r\n    )\r\n}\r\n\r\nexport default Users"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,SAAQA,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,WAAW,EAAEC,QAAQ,EAAEC,aAAa,QAAO,uBAAuB;AAC1E,SAAQC,SAAS,QAAO,OAAO;AAC/B,OAAOC,OAAO,MAAM,kCAAkC;AACtD,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,SAAQC,OAAO,QAAO,aAAa;AAAC;AAAA;AAEpC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAEhB,MAAMC,IAAI,GAAGF,OAAO,EAAE;EACtB,MAAMG,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,KAAK,GAAGX,WAAW,CAACE,QAAQ,CAAC;EACnC,MAAMU,MAAM,GAAGZ,WAAW,CAACG,aAAa,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACZM,QAAQ,CAACT,WAAW,CAAC;MAACY,EAAE,EAAEJ,IAAI,CAACK;IAAG,CAAC,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIC,OAAO;EACX,IAAIH,MAAM,KAAK,SAAS,EAAE;IACtBG,OAAO,gBAAG,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EACxB,CAAC,MAAM,IAAIH,MAAM,KAAK,WAAW,EAAE;IAC/B,MAAMI,YAAY,GAAGL,KAAK,CAACM,KAAK,EAAE,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,SAAS,CAACC,aAAa,CAACH,CAAC,CAACE,SAAS,CAAC,CAAC;IACzFN,OAAO,GAAGC,YAAY,CAACO,GAAG,CAAC,CAACC,CAAC,EAACC,CAAC,kBAC3B;MAAa,SAAS,EAAC,WAAW;MAAA,wBAC9B;QAAK,GAAG,EAAED,CAAC,CAACE,MAAM,GAAGF,CAAC,CAACE,MAAM,GAAG,iBAAkB;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eAC3D;QAAA,UAAKF,CAAC,CAACG;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA,GAFfF,CAAC;MAAA;MAAA;MAAA;IAAA,QAGL,CACT;EACL,CAAC,MAAM,IAAIb,MAAM,KAAK,QAAQ,EAAE;IAC5BG,OAAO,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAY;EAC1B;EAEA,oBACI;IAAA,UAAGA;EAAO,iBAAI;AAEtB,CAAC;AAAA,GA7BKP,KAAK;EAAA,QAEMD,OAAO,EACHR,WAAW,EACdC,WAAW,EACVA,WAAW;AAAA;AAAA,KALxBQ,KAAK;AA+BX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
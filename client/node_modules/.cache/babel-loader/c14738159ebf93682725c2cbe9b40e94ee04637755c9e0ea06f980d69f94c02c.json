{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\IdeaProjects\\\\datn\\\\client\\\\src\\\\components\\\\ProfilePosts\\\\ProfilePosts.js\",\n  _s = $RefreshSig$();\nimport \"./profilePosts.css\";\nimport PostSquare from \"../../components/PostSquare/PostSquare\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchProfilePosts, getPosts, getPostsError, getPostsStatus } from \"../../redux/postsSlice\";\nimport Loading from \"../Loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePosts = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const dispatch = useDispatch();\n  const posts = useSelector(getPosts);\n  const postStatus = useSelector(getPostsStatus);\n  const error = useSelector(getPostsError);\n  useEffect(() => {\n    dispatch(fetchProfilePosts({\n      userId\n    }));\n  }, [userId]);\n  let content;\n  if (postStatus === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }, this);\n  } else if (postStatus === 'succeeded') {\n    content = posts.map(post => /*#__PURE__*/_jsxDEV(PostSquare, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 37\n    }, this));\n  } else if (postStatus === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-posts-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePosts, \"WVsaUdjlRZdgFV51nhKfVUEst3c=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = ProfilePosts;\nexport default ProfilePosts;\nvar _c;\n$RefreshReg$(_c, \"ProfilePosts\");","map":{"version":3,"names":["PostSquare","useDispatch","useSelector","useEffect","fetchProfilePosts","getPosts","getPostsError","getPostsStatus","Loading","ProfilePosts","userId","dispatch","posts","postStatus","error","content","map","post","id"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/components/ProfilePosts/ProfilePosts.js"],"sourcesContent":["import \"./profilePosts.css\"\r\nimport PostSquare from \"../../components/PostSquare/PostSquare\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {fetchProfilePosts, getPosts, getPostsError, getPostsStatus} from \"../../redux/postsSlice\";\r\nimport Loading from \"../Loading/Loading\";\r\n\r\nconst ProfilePosts = ({userId}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const posts = useSelector(getPosts)\r\n    const postStatus = useSelector(getPostsStatus);\r\n    const error = useSelector(getPostsError);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchProfilePosts({userId}))\r\n    }, [userId]);\r\n\r\n    let content;\r\n    if (postStatus === 'loading') {\r\n        content = <Loading/>;\r\n    } else if (postStatus === 'succeeded') {\r\n        content = posts.map(post => <PostSquare key={post.id} post={post} />)\r\n    } else if (postStatus === 'failed') {\r\n        content = <p>{error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile-posts-container\">\r\n            <div className=\"gallery\">\r\n                {content}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePosts"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,OAAOA,UAAU,MAAM,wCAAwC;AAC/D,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,SAAS,QAAO,OAAO;AAC/B,SAAQC,iBAAiB,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,cAAc,QAAO,wBAAwB;AACjG,OAAOC,OAAO,MAAM,oBAAoB;AAAC;AAEzC,MAAMC,YAAY,GAAG,QAAc;EAAA;EAAA,IAAb;IAACC;EAAM,CAAC;EAE1B,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,KAAK,GAAGV,WAAW,CAACG,QAAQ,CAAC;EACnC,MAAMQ,UAAU,GAAGX,WAAW,CAACK,cAAc,CAAC;EAC9C,MAAMO,KAAK,GAAGZ,WAAW,CAACI,aAAa,CAAC;EAExCH,SAAS,CAAC,MAAM;IACZQ,QAAQ,CAACP,iBAAiB,CAAC;MAACM;IAAM,CAAC,CAAC,CAAC;EACzC,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,IAAIK,OAAO;EACX,IAAIF,UAAU,KAAK,SAAS,EAAE;IAC1BE,OAAO,gBAAG,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EACxB,CAAC,MAAM,IAAIF,UAAU,KAAK,WAAW,EAAE;IACnCE,OAAO,GAAGH,KAAK,CAACI,GAAG,CAACC,IAAI,iBAAI,QAAC,UAAU;MAAe,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAAgB,CAAC;EACzE,CAAC,MAAM,IAAIL,UAAU,KAAK,QAAQ,EAAE;IAChCE,OAAO,gBAAG;MAAA,UAAID;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAC5B;EAEA,oBACI;IAAK,SAAS,EAAC,yBAAyB;IAAA,uBACpC;MAAK,SAAS,EAAC,SAAS;MAAA,UACnBC;IAAO;MAAA;MAAA;MAAA;IAAA;EACN;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA3BKN,YAAY;EAAA,QAEGR,WAAW,EACdC,WAAW,EACNA,WAAW,EAChBA,WAAW;AAAA;AAAA,KALvBO,YAAY;AA6BlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
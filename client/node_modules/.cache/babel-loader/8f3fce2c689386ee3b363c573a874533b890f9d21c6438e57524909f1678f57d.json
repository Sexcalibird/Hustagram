{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../axios/axios\";\nconst initialState = {\n  success: false,\n  error: null\n};\nexport const signUp = createAsyncThunk('register/signUp', async (_ref, _ref2) => {\n  let {\n    email,\n    user,\n    pwd\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const response = await axios.post('/register', {\n      email,\n      user,\n      pwd\n    });\n    return response.data;\n  } catch (err) {\n    var _err$response;\n    if (!(err !== null && err !== void 0 && err.response)) {\n      return rejectWithValue('No Server Response');\n    } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n      return rejectWithValue('Email Taken');\n    } else {\n      return rejectWithValue('Registration Failed');\n    }\n  }\n});\nconst registerSlice = createSlice({\n  name: 'register',\n  initialState,\n  reducers: {\n    reset: () => {\n      return {\n        ...initialState\n      };\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(signUp.fulfilled, (state, action) => {\n      state.success = true;\n    }).addCase(signUp.rejected, (state, action) => {\n      state.error = action.payload;\n    });\n  }\n});\nexport const getError = state => state.register.error;\nexport const getSuccess = state => state.register.success;\nexport const {\n  reset\n} = registerSlice.actions;\nexport default registerSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","success","error","signUp","email","user","pwd","rejectWithValue","response","post","data","err","status","registerSlice","name","reducers","reset","extraReducers","builder","addCase","fulfilled","state","action","rejected","payload","getError","register","getSuccess","actions","reducer"],"sources":["C:/Users/ADMIN/IdeaProjects/datn/client/src/redux/registerSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport axios from \"../axios/axios\";\r\n\r\nconst initialState = {\r\n    success: false,\r\n    error : null\r\n}\r\n\r\nexport const signUp = createAsyncThunk('register/signUp',async ({email, user, pwd}, {rejectWithValue}) => {\r\n    try {\r\n        const response = await axios.post('/register', {email, user, pwd})\r\n        return response.data\r\n    } catch (err) {\r\n        if (!err?.response) {\r\n            return rejectWithValue('No Server Response');\r\n        } else if (err.response?.status === 409) {\r\n            return rejectWithValue('Email Taken');\r\n        } else {\r\n            return rejectWithValue('Registration Failed')\r\n        }\r\n    }\r\n})\r\n\r\nconst registerSlice = createSlice({\r\n    name: 'register',\r\n    initialState,\r\n    reducers: {\r\n        reset: () => {\r\n            return {\r\n                ...initialState\r\n            }\r\n        }\r\n    },\r\n    extraReducers(builder){\r\n        builder\r\n            .addCase(signUp.fulfilled,(state,action) => {\r\n                state.success = true\r\n            })\r\n            .addCase(signUp.rejected, (state, action) => {\r\n                state.error = action.payload\r\n            })\r\n    }\r\n})\r\n\r\nexport const getError = (state) => state.register.error\r\nexport const getSuccess = (state) => state.register.success\r\nexport const {reset} = registerSlice.actions\r\nexport default registerSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9D,OAAOC,KAAK,MAAM,gBAAgB;AAElC,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAG;AACZ,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGL,gBAAgB,CAAC,iBAAiB,EAAC,uBAAiD;EAAA,IAA1C;IAACM,KAAK;IAAEC,IAAI;IAAEC;EAAG,CAAC;EAAA,IAAE;IAACC;EAAe,CAAC;EACjG,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,WAAW,EAAE;MAACL,KAAK;MAAEC,IAAI;MAAEC;IAAG,CAAC,CAAC;IAClE,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA;IACV,IAAI,EAACA,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEH,QAAQ,GAAE;MAChB,OAAOD,eAAe,CAAC,oBAAoB,CAAC;IAChD,CAAC,MAAM,IAAI,kBAAAI,GAAG,CAACH,QAAQ,kDAAZ,cAAcI,MAAM,MAAK,GAAG,EAAE;MACrC,OAAOL,eAAe,CAAC,aAAa,CAAC;IACzC,CAAC,MAAM;MACH,OAAOA,eAAe,CAAC,qBAAqB,CAAC;IACjD;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMM,aAAa,GAAGhB,WAAW,CAAC;EAC9BiB,IAAI,EAAE,UAAU;EAChBd,YAAY;EACZe,QAAQ,EAAE;IACNC,KAAK,EAAE,MAAM;MACT,OAAO;QACH,GAAGhB;MACP,CAAC;IACL;EACJ,CAAC;EACDiB,aAAa,CAACC,OAAO,EAAC;IAClBA,OAAO,CACFC,OAAO,CAAChB,MAAM,CAACiB,SAAS,EAAC,CAACC,KAAK,EAACC,MAAM,KAAK;MACxCD,KAAK,CAACpB,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC,CACDkB,OAAO,CAAChB,MAAM,CAACoB,QAAQ,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACzCD,KAAK,CAACnB,KAAK,GAAGoB,MAAM,CAACE,OAAO;IAChC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAIJ,KAAK,IAAKA,KAAK,CAACK,QAAQ,CAACxB,KAAK;AACvD,OAAO,MAAMyB,UAAU,GAAIN,KAAK,IAAKA,KAAK,CAACK,QAAQ,CAACzB,OAAO;AAC3D,OAAO,MAAM;EAACe;AAAK,CAAC,GAAGH,aAAa,CAACe,OAAO;AAC5C,eAAef,aAAa,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}